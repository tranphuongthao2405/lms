[{"D:\\Workspace\\lms\\frontend\\src\\index.js":"1","D:\\Workspace\\lms\\frontend\\src\\serviceWorker.js":"2","D:\\Workspace\\lms\\frontend\\src\\components\\App.js":"3","D:\\Workspace\\lms\\frontend\\src\\_reducers\\index.js":"4","D:\\Workspace\\lms\\frontend\\src\\hoc\\auth.js":"5","D:\\Workspace\\lms\\frontend\\src\\components\\views\\LandingPage\\LandingPage.js":"6","D:\\Workspace\\lms\\frontend\\src\\components\\views\\LoginPage\\LoginPage.js":"7","D:\\Workspace\\lms\\frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js":"8","D:\\Workspace\\lms\\frontend\\src\\components\\views\\NavBar\\NavBar.js":"9","D:\\Workspace\\lms\\frontend\\src\\components\\views\\Footer\\Footer.js":"10","D:\\Workspace\\lms\\frontend\\src\\components\\views\\UploadCourse\\UploadCourse.js":"11","D:\\Workspace\\lms\\frontend\\src\\components\\views\\CourseDetail\\CourseDetail.js":"12","D:\\Workspace\\lms\\frontend\\src\\components\\views\\UploadVideo\\UploadVideo.js":"13","D:\\Workspace\\lms\\frontend\\src\\components\\views\\VideoPlayer\\VideoPlayer.js":"14","D:\\Workspace\\lms\\frontend\\src\\components\\views\\UserInfo\\UserInfo.js":"15","D:\\Workspace\\lms\\frontend\\src\\components\\views\\UploadQuiz\\UploadQuiz.js":"16","D:\\Workspace\\lms\\frontend\\src\\_reducers\\user_reducer.js":"17","D:\\Workspace\\lms\\frontend\\src\\_actions\\user_actions.js":"18","D:\\Workspace\\lms\\frontend\\src\\components\\views\\SearchBar\\SearchBar.js":"19","D:\\Workspace\\lms\\frontend\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"20","D:\\Workspace\\lms\\frontend\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"21","D:\\Workspace\\lms\\frontend\\src\\components\\utils\\FileUpload.js":"22","D:\\Workspace\\lms\\frontend\\src\\components\\views\\CourseDetail\\CourseInfo\\CourseInfo.js":"23","D:\\Workspace\\lms\\frontend\\src\\components\\views\\VideoPlayer\\SideVideo\\SideVideo.js":"24","D:\\Workspace\\lms\\frontend\\src\\_actions\\types.js":"25","D:\\Workspace\\lms\\frontend\\src\\components\\Config.js":"26","D:\\Workspace\\lms\\frontend\\src\\components\\views\\CourseCollection\\CourseCollection.js":"27","D:\\Workspace\\lms\\frontend\\src\\components\\views\\LearningPath\\LearningPath.js":"28","D:\\Workspace\\lms\\frontend\\src\\components\\views\\Quiz\\Quiz.js":"29"},{"size":1184,"mtime":1607332980937,"results":"30","hashOfConfig":"31"},{"size":5154,"mtime":1607334745104,"results":"32","hashOfConfig":"31"},{"size":2621,"mtime":1608882139133,"results":"33","hashOfConfig":"31"},{"size":164,"mtime":1607332751970,"results":"34","hashOfConfig":"31"},{"size":982,"mtime":1607334475490,"results":"35","hashOfConfig":"31"},{"size":3661,"mtime":1607914394354,"results":"36","hashOfConfig":"31"},{"size":5656,"mtime":1607334831677,"results":"37","hashOfConfig":"31"},{"size":6167,"mtime":1607334773305,"results":"38","hashOfConfig":"31"},{"size":1437,"mtime":1607332907333,"results":"39","hashOfConfig":"31"},{"size":320,"mtime":1607334201540,"results":"40","hashOfConfig":"31"},{"size":2372,"mtime":1607335053559,"results":"41","hashOfConfig":"31"},{"size":1817,"mtime":1607926839028,"results":"42","hashOfConfig":"31"},{"size":5952,"mtime":1607920214038,"results":"43","hashOfConfig":"31"},{"size":4768,"mtime":1608888198518,"results":"44","hashOfConfig":"31"},{"size":2300,"mtime":1607334417688,"results":"45","hashOfConfig":"31"},{"size":9158,"mtime":1608869143328,"results":"46","hashOfConfig":"31"},{"size":505,"mtime":1607332758477,"results":"47","hashOfConfig":"31"},{"size":1016,"mtime":1607333010161,"results":"48","hashOfConfig":"31"},{"size":525,"mtime":1607676938831,"results":"49","hashOfConfig":"31"},{"size":324,"mtime":1607335062691,"results":"50","hashOfConfig":"31"},{"size":3047,"mtime":1607915468344,"results":"51","hashOfConfig":"31"},{"size":2399,"mtime":1607333881393,"results":"52","hashOfConfig":"31"},{"size":3593,"mtime":1607926901610,"results":"53","hashOfConfig":"31"},{"size":2936,"mtime":1608878729329,"results":"54","hashOfConfig":"31"},{"size":170,"mtime":1605829236249,"results":"55","hashOfConfig":"31"},{"size":42,"mtime":1607333784949,"results":"56","hashOfConfig":"31"},{"size":5836,"mtime":1607927042397,"results":"57","hashOfConfig":"31"},{"size":1935,"mtime":1607919775189,"results":"58","hashOfConfig":"31"},{"size":2778,"mtime":1608888319435,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"uj8w8j",{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\lms\\frontend\\src\\index.js",[],["133","134","135","136","137"],"D:\\Workspace\\lms\\frontend\\src\\serviceWorker.js",["138","139","140","141","142"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\App.js",["143"],"D:\\Workspace\\lms\\frontend\\src\\_reducers\\index.js",[],"D:\\Workspace\\lms\\frontend\\src\\hoc\\auth.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\LandingPage\\LandingPage.js",["144","145"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button, Card, Icon, Col, Row,\r\n} from 'antd';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction LandingPage(props) {\r\n  const [courses, setCourses] = useState([]);\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  const [postSize, setPostSize] = useState(0);\r\n  const [searchTerms, setSearchTerms] = useState('');\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const { category } = props.match.params;\r\n\r\n  const getCourses = (variables) => {\r\n    axios.post('/api/courses/getCourses', variables).then((response) => {\r\n      if (response.data.success) {\r\n        if (variables.loadMore) {\r\n          setCourses([...courses, ...response.data.courses]);\r\n        } else {\r\n          setCourses(response.data.courses);\r\n        }\r\n        setPostSize(response.data.postSize);\r\n      } else {\r\n        console.log('Failed to fetch courses');\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      skip,\r\n      limit,\r\n      category,\r\n    };\r\n\r\n    getCourses(variables);\r\n  }, []);\r\n\r\n  const onLoadMore = () => {\r\n    const skipTemp = skip + limit;\r\n    const variables = {\r\n      skip: skipTemp,\r\n      limit,\r\n      loadMore: true,\r\n      category,\r\n      searchTerm: searchTerms,\r\n    };\r\n    getCourses(variables);\r\n    setSkip(skipTemp);\r\n  };\r\n\r\n  const renderCards = courses.map((course) => (\r\n    <Col lg={6} md={8} xs={24} key={`${course._id}`}>\r\n      <Card\r\n        hoverable\r\n        cover={(\r\n          <a href={`/course/${course._id}`}>\r\n            <img\r\n              src={course.thumbnail[0]}\r\n              alt=\"course thumbnail\"\r\n              style={{\r\n                width: 340,\r\n                height: 190,\r\n              }}\r\n            />\r\n          </a>\r\n        )}\r\n      >\r\n        <Meta title={course.title} description={`Category: ${course.category}`} />\r\n      </Card>\r\n    </Col>\r\n  ));\r\n\r\n  // still fixing: cannot return res for search text\r\n  const updateSearchTerms = (newSearchTerms) => {\r\n    const variables = {\r\n      skip: 0,\r\n      limit,\r\n      searchTerm: newSearchTerms,\r\n    };\r\n\r\n    setSkip(0);\r\n    setSearchTerms(newSearchTerms);\r\n\r\n    getCourses(variables);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: '75%', margin: '3rem auto' }}>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h2>\r\n            Explore all the course\r\n            {' '}\r\n            <Icon type=\"search\" />\r\n          </h2>\r\n\r\n          <br />\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              margin: '1rem auto',\r\n            }}\r\n          >\r\n            <SearchBar refreshFunction={updateSearchTerms} />\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          {courses.length === 0 ? (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                height: '300px',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <h2>Loading...</h2>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Row gutter={[16, 16]}>{renderCards}</Row>\r\n            </div>\r\n          )}\r\n          <br />\r\n          <br />\r\n\r\n          {postSize >= limit && (\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <Button onClick={onLoadMore}>Load more</Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\LoginPage\\LoginPage.js",["146","147"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-shadow */\r\nimport React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox, Typography,\r\n} from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../../../_actions/user_actions';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = !!localStorage.getItem('rememberMe');\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem('rememberMe') ? localStorage.getItem('rememberMe') : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          const dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push('/');\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again');\r\n              }\r\n            })\r\n            .catch(() => {\r\n              setFormErrorMessage('Check out your Account or Password again');\r\n              setTimeout(() => {\r\n                setFormErrorMessage('');\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p style={{\r\n                    color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px',\r\n                  }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe}>Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  Forgot password\r\n                </a>\r\n                <div>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ minWidth: '100%' }}\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or\r\n                {' '}\r\n                <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js",["148","149","150"],"/* eslint-disable no-shadow */\r\nimport React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\nimport { registerUser } from '../../../_actions/user_actions';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        username: Yup.string().required('Username is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          const dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            username: values.username,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push('/login');\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: '375px' }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"Username\">\r\n                <Input\r\n                  id=\"username\"\r\n                  placeholder=\"Enter your username\"\r\n                  type=\"text\"\r\n                  value={values.username}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  classusername={\r\n                    errors.username && touched.username\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.username && touched.username && (\r\n                  <div className=\"input-feedback\">{errors.username}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? 'error' : 'success'\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? 'text-input error'\r\n                      : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\Footer\\Footer.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\UploadCourse\\UploadCourse.js",["151","152","153"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Form, Input, Button, Typography,\r\n} from 'antd';\r\nimport axios from 'axios';\r\nimport FileUpload from '../../utils/FileUpload';\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst UploadCourse = (props) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [thumbnail, setThumbnail] = useState([]);\r\n\r\n  const onTitleChange = (evt) => {\r\n    setTitle(evt.target.value);\r\n  };\r\n\r\n  const onDescriptionChange = (evt) => {\r\n    setDescription(evt.target.value);\r\n  };\r\n\r\n  const onCategoryChange = (evt) => {\r\n    setCategory(evt.target.value);\r\n  };\r\n\r\n  const updateImages = (newImage) => {\r\n    setThumbnail(newImage);\r\n  };\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (!title || !description || !category) {\r\n      return alert('Please fill out all the fields.');\r\n    }\r\n    const values = {\r\n      uploader: props.user.userData._id,\r\n      title,\r\n      category,\r\n      description,\r\n      thumbnail,\r\n    };\r\n\r\n    axios.post('/api/courses/uploadCourse', values).then((response) => {\r\n      if (response.data.success) {\r\n        alert('Upload course successfully');\r\n        props.history.push('/');\r\n      } else {\r\n        alert('Failed to upload course');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Upload Course</Title>\r\n      </div>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        <label>Title:</label>\r\n        <Input onChange={onTitleChange} value={title} required />\r\n        <br />\r\n        <br />\r\n        <label>Category:</label>\r\n        <Input onChange={onCategoryChange} value={category} required />\r\n        <br />\r\n        <br />\r\n        <label>Description:</label>\r\n        <TextArea onChange={onDescriptionChange} value={description} required />\r\n        <br />\r\n        <br />\r\n        <Button onClick={onSubmit}>Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadCourse;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\CourseDetail\\CourseDetail.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\UploadVideo\\UploadVideo.js",["154","155","156"],"/* eslint-disable no-shadow */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable no-alert */\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Typography, Button, Form, Input, Icon, Select,\r\n} from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nfunction UploadVideo(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [courses, setCourses] = useState([]);\r\n  const [course, setCourse] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [filePath, setFilePath] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [thumbnail, setThumbnail] = useState('');\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n\r\n  const handleChangeTitle = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleChangeDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const onCourseChange = (value) => {\r\n    setCourse(value);\r\n  };\r\n\r\n  const onDrop = (files) => {\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n\r\n    axios.post('/api/videos/uploadFiles', formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        const variable = {\r\n          filePath: response.data.filePath,\r\n          fileName: response.data.fileName,\r\n        };\r\n        setFilePath(response.data.filePath);\r\n\r\n        // generate thumbnail with this filepath\r\n        axios.post('/api/videos/thumbnail', variable).then((response) => {\r\n          if (response.data.success) {\r\n            setDuration(response.data.fileDuration);\r\n            setThumbnail(response.data.thumbsFilePath);\r\n          } else {\r\n            alert('Failed to make the thumbnails');\r\n          }\r\n        });\r\n      } else {\r\n        alert('Failed to save the video in server');\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const courseVariables = {\r\n      skip,\r\n      limit,\r\n    };\r\n    // get course from course schema\r\n    axios.post('/api/courses/getCourses', courseVariables).then((response) => {\r\n      if (response.data.success) {\r\n        setCourses(response.data.courses);\r\n      } else {\r\n        console.log('Failed to get courses');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n      return alert('Please sign in first');\r\n    }\r\n\r\n    if (courses !== []) {\r\n      if (\r\n        title === ''\r\n        || course === ''\r\n        || description === ''\r\n        || filePath === ''\r\n        || duration === ''\r\n        || thumbnail === ''\r\n      ) {\r\n        return alert('Please fill out all the fields');\r\n      }\r\n\r\n      const variables = {\r\n        uploader: user.userData._id,\r\n        course,\r\n        title,\r\n        description,\r\n        filePath,\r\n        duration,\r\n        thumbnail,\r\n      };\r\n\r\n      axios.post('/api/videos/uploadVideo', variables).then((response) => {\r\n        if (response.data.success) {\r\n          alert('Upload course successfully');\r\n          props.history.push('/');\r\n        } else {\r\n          alert('Failed to upload video');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}> Upload Video</Title>\r\n      </div>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: '300px',\r\n                  height: '280px',\r\n                  border: '1px solid lightgray',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              width: '400px',\r\n              height: '280px',\r\n              border: '1px solid lightgray',\r\n              overflowX: 'hidden',\r\n              overflowY: 'hidden',\r\n            }}\r\n          >\r\n            {thumbnail !== '' ? (\r\n              <img\r\n                style={{ minWidth: '400px', width: '400px', height: '280px' }}\r\n                src={`http://localhost:5000/${thumbnail}`}\r\n                alt=\"thumbnail\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <label>Title:</label>\r\n        <Input onChange={handleChangeTitle} value={title} required />\r\n        <br />\r\n        <br />\r\n        <label>Description:</label>\r\n        <TextArea onChange={handleChangeDescription} value={description} required />\r\n        <br />\r\n        <br />\r\n        <label>Course:</label>\r\n        <Select onChange={onCourseChange}>\r\n          {courses !== []\r\n            && courses.map((item) => (\r\n              <Option key={item._id} value={item._id}>\r\n                {item.title}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n        <br />\r\n        <br />\r\n\r\n        <Button size=\"default\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadVideo;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\VideoPlayer\\VideoPlayer.js",["157","158","159"],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\UserInfo\\UserInfo.js",["160","161"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Form, Input, Button, Typography,\r\n} from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst UserInfo = (props) => {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  const onUsernameChange = (evt) => {\r\n    setUsername(evt.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (evt) => {\r\n    setPassword(evt.target.value);\r\n  };\r\n\r\n  const onEmailChange = (evt) => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const values = {\r\n      userId: props.match.params.userId,\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    axios.post('/api/users/updateInformation', values).then((response) => {\r\n      if (response.data.success) {\r\n        alert('Update information successfully');\r\n        props.history.push('/');\r\n      } else {\r\n        alert('Failed to update information');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Update Information</Title>\r\n      </div>\r\n\r\n      <form onSubmit={onSubmit} style={{ width: '800px' }}>\r\n        <Form.Item>\r\n          <label>Email:</label>\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter your new email\"\r\n            value={email}\r\n            onChange={onEmailChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <label>Password:</label>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Enter your new password\"\r\n            value={password}\r\n            onChange={onPasswordChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <label>Username:</label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter your new username\"\r\n            value={username}\r\n            onChange={onUsernameChange}\r\n          />\r\n        </Form.Item>\r\n        <Button size=\"default\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\UploadQuiz\\UploadQuiz.js",["162","163","164","165","166","167","168","169","170","171","172"],"/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Form, Select, Input, Typography, Button, Radio, Icon,\r\n} from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst ButtonGroup = Button.Group;\r\n\r\nconst UploadQuiz = () => {\r\n  const [courses, setCourses] = useState();\r\n  const [course, setCourse] = useState();\r\n  const [videos, setVideos] = useState();\r\n  const [video, setVideo] = useState();\r\n\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n\r\n  const [questionSelected, setQuestionSelected] = useState(1);\r\n\r\n  const [quizNumber, setQuizNumber] = useState(1);\r\n  const [question, setQuestion] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [choiceA, setChoiceA] = useState();\r\n  const [choiceB, setChoiceB] = useState();\r\n  const [choiceC, setChoiceC] = useState();\r\n  const [choiceD, setChoiceD] = useState();\r\n  const [data, setData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const onCourseChange = (value) => {\r\n    setCourse(value);\r\n  };\r\n\r\n  const onVideoChange = (value) => {\r\n    setVideo(value);\r\n  };\r\n\r\n  const onQuizNumberChange = (evt) => {\r\n    setQuizNumber(evt.target.value);\r\n  };\r\n\r\n  const onQuestionChange = (evt) => {\r\n    setQuestion(evt.target.value);\r\n  };\r\n\r\n  const onAnswerChange = (evt) => {\r\n    setAnswer(evt.target.value);\r\n  };\r\n\r\n  const onChoiceChange = (choice, evt) => {\r\n    switch (choice) {\r\n      case 1:\r\n        setChoiceA(evt.target.value);\r\n        break;\r\n      case 2:\r\n        setChoiceB(evt.target.value);\r\n        break;\r\n      case 3:\r\n        setChoiceC(evt.target.value);\r\n        break;\r\n      case 4:\r\n        setChoiceD(evt.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const processData = (select) => {\r\n    if (course && video) {\r\n      const dataToSubmit = {\r\n        courseId: course,\r\n        videoId: video,\r\n        uploader: localStorage.userId,\r\n        quizzes: data,\r\n        questionSelected,\r\n      };\r\n\r\n      if (!question || !choiceA || !choiceB || !choiceC || !choiceD || !answer) {\r\n        alert('You must fill out all the fields before submitting or changing to other questions.');\r\n      } else {\r\n        axios.post('/api/quizzes/saveQuiz', dataToSubmit).then((res) => {\r\n          if (res.data.success) {\r\n            console.log('Successfully save or update question');\r\n          } else {\r\n            console.log('Failed to save course');\r\n          }\r\n        });\r\n\r\n        if (select === 'next') {\r\n          setQuestionSelected(questionSelected + 1);\r\n        } else {\r\n          setQuestionSelected(questionSelected - 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSelectNextQuestion = () => {\r\n    const quizData = {\r\n      question,\r\n      choices: [choiceA, choiceB, choiceC, choiceD],\r\n      answer,\r\n    };\r\n\r\n    data[questionSelected - 1] = quizData;\r\n    processData('next');\r\n  };\r\n\r\n  const onSelectBackQuestion = () => {\r\n    const quizData = {\r\n      question,\r\n      choices: [choiceA, choiceB, choiceC, choiceD],\r\n      answer,\r\n    };\r\n\r\n    data[questionSelected - 1] = quizData;\r\n    processData('back');\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (course && video) {\r\n      const updateData = {\r\n        courseId: course,\r\n        videoId: video,\r\n        uploader: localStorage.userId,\r\n        questionSelected,\r\n        question,\r\n        choices: [choiceA, choiceB, choiceC, choiceD],\r\n        answer,\r\n      };\r\n\r\n      axios.post('/api/quizzes/updateQuiz', updateData).then((response) => {\r\n        if (response.data.success) {\r\n          alert('Upload quizzes successfully');\r\n          history.push('/');\r\n        } else {\r\n          console.log('Failed to update data');\r\n        }\r\n      });\r\n    } else {\r\n      alert('Select course and video first to add quizzes');\r\n    }\r\n  };\r\n\r\n  // update course\r\n  useEffect(() => {\r\n    const courseVariables = {\r\n      skip,\r\n      limit,\r\n    };\r\n    // get course from course schema\r\n    axios.post('/api/courses/getCourses', courseVariables).then((response) => {\r\n      if (response.data.success) {\r\n        setCourses(response.data.courses);\r\n      } else {\r\n        console.log('Failed to get courses');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // update videos of course\r\n  useEffect(() => {\r\n    if (course) {\r\n      const videoVariables = {\r\n        courseId: course,\r\n      };\r\n\r\n      axios.post('/api/videos/getVideos', videoVariables).then((response) => {\r\n        if (response.data.success) {\r\n          setVideos(response.data.videos);\r\n        } else {\r\n          console.log('Failed to get videos');\r\n        }\r\n      });\r\n    }\r\n  }, [course]);\r\n\r\n  useEffect(() => {\r\n    if (course && video) {\r\n      const variables = {\r\n        courseId: course,\r\n        videoId: video,\r\n      };\r\n\r\n      axios.post('/api/quizzes/getQuizzes', variables).then((response) => {\r\n        if (response.data.success) {\r\n          if (response.data.quiz !== undefined) {\r\n            setQuestion(response.data.quiz[questionSelected - 1].question);\r\n            setAnswer(response.data.quiz[questionSelected - 1].answer);\r\n            setChoiceA(response.data.quiz[questionSelected - 1].choices[0]);\r\n            setChoiceB(response.data.quiz[questionSelected - 1].choices[1]);\r\n            setChoiceC(response.data.quiz[questionSelected - 1].choices[2]);\r\n            setChoiceD(response.data.quiz[questionSelected - 1].choices[3]);\r\n            setQuizNumber(response.data.quiz.length);\r\n          }\r\n        } else {\r\n          setQuestion('');\r\n          setAnswer('');\r\n          setChoiceA('');\r\n          setChoiceB('');\r\n          setChoiceC('');\r\n          setChoiceD('');\r\n        }\r\n      });\r\n    }\r\n  }, [course, video, quizNumber, questionSelected]);\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '2rem auto' }}>\r\n      <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n        <Title level={2}>Upload Quiz</Title>\r\n        <p>Note: You have to choose course first before choosing video</p>\r\n      </div>\r\n\r\n      <Form>\r\n        <label>Course:</label>\r\n        <Select onChange={onCourseChange}>\r\n          {courses\r\n            && courses.map((item) => (\r\n              <Option key={item._id} value={item._id}>\r\n                {item.title}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n        <br />\r\n        <br />\r\n        <label>Video:</label>\r\n        <Select onChange={onVideoChange}>\r\n          {course && videos\r\n            && videos.map((item) => (\r\n              <Option key={item._id} value={item._id}>\r\n                {item.title}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n        <br />\r\n        <br />\r\n        <p>Note: The max number of quizzes is 10</p>\r\n        <label>Number of quizzes:</label>\r\n        <Input type=\"number\" required min={1} max={10} onChange={onQuizNumberChange} value={quizNumber} />\r\n        <br />\r\n        <br />\r\n\r\n        <label>Fill all fields below:</label>\r\n        <br />\r\n        <br />\r\n        <div>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <span>{`Question ${questionSelected}:`}</span>\r\n            <ButtonGroup style={{ marginBottom: '0.5rem' }}>\r\n              <Button disabled={!(questionSelected > 1)} onClick={onSelectBackQuestion}>\r\n                <Icon type=\"left\" style={{ fontSize: 8 }} />\r\n              </Button>\r\n              <Button disabled={!(questionSelected < quizNumber)} onClick={onSelectNextQuestion}>\r\n                <Icon type=\"right\" style={{ fontSize: 8 }} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n          <Input type=\"text\" value={question} onChange={(evt) => onQuestionChange(evt)} required />\r\n          <br />\r\n          <br />\r\n          <span>Choice A: </span>\r\n          <Input type=\"text\" value={choiceA} onChange={(evt) => onChoiceChange(1, evt)} required />\r\n          <br />\r\n          <br />\r\n          <span>Choice B: </span>\r\n          <Input type=\"text\" value={choiceB} onChange={(evt) => onChoiceChange(2, evt)} required />\r\n          <br />\r\n          <br />\r\n          <span>Choice C: </span>\r\n          <Input type=\"text\" value={choiceC} onChange={(evt) => onChoiceChange(3, evt)} required />\r\n          <br />\r\n          <br />\r\n          <span>Choice D: </span>\r\n          <Input type=\"text\" value={choiceD} onChange={(evt) => onChoiceChange(4, evt)} required />\r\n          <br />\r\n          <br />\r\n          <label style={{ marginRight: '1rem' }}>Select answer for question:</label>\r\n          <Radio.Group onChange={(evt) => onAnswerChange(evt)} value={answer}>\r\n            <Radio value={1}>A</Radio>\r\n            <Radio value={2}>B</Radio>\r\n            <Radio value={3}>C</Radio>\r\n            <Radio value={4}>D</Radio>\r\n          </Radio.Group>\r\n          <br />\r\n          <br />\r\n        </div>\r\n\r\n        <Button size=\"default\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadQuiz;\r\n","D:\\Workspace\\lms\\frontend\\src\\_reducers\\user_reducer.js",["173"],"import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  AUTH_USER,\r\n  LOGOUT_USER,\r\n} from '../_actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n    case LOGIN_USER:\r\n      return { ...state, loginSucces: action.payload };\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n    case LOGOUT_USER:\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Workspace\\lms\\frontend\\src\\_actions\\user_actions.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\SearchBar\\SearchBar.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",["174"],"/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu } from 'antd';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { USER_SERVER } from '../../../Config';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n  let isAdmin;\r\n  if (user !== undefined) {\r\n    if (user.userData !== undefined) {\r\n      isAdmin = user.userData.isAdmin;\r\n    }\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push('/login');\r\n      } else {\r\n        alert('Log Out Failed');\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {user !== undefined && user.userData !== undefined ? (\r\n        <div>\r\n          <Menu mode={props.mode}>\r\n            {/* only admin can access upload feature */}\r\n            {isAdmin ? (\r\n              <SubMenu title={<span>Upload</span>}>\r\n                <MenuItemGroup>\r\n                  <Menu.Item key=\"course\">\r\n                    <a href=\"/course/upload\">Upload Course</a>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"video\">\r\n                    <a href=\"/video/upload\">Upload Video</a>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"quiz\">\r\n                    <a href=\"/quiz/upload\">Upload Quiz</a>\r\n                  </Menu.Item>\r\n                </MenuItemGroup>\r\n              </SubMenu>\r\n            ) : (\r\n              <> </>\r\n            )}\r\n\r\n            <Menu.Item key=\"course collection\">\r\n              <a href=\"/courseCollection\">My Courses</a>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"learning path\">\r\n              <a href=\"/learningPath\">Learning Path</a>\r\n            </Menu.Item>\r\n\r\n            <SubMenu title={(\r\n              <span>\r\n                {' '}\r\n                Hi,\r\n                {' '}\r\n                {' '}\r\n                {user.userData.username}\r\n              </span>\r\n)}\r\n            >\r\n              <MenuItemGroup>\r\n                <Menu.Item key=\"user info\">\r\n                  <a href={`/user/${user.userData._id}`}>\r\n                    Update information\r\n                  </a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"logout\">\r\n                  <a onClick={logoutHandler}>Logout</a>\r\n                </Menu.Item>\r\n              </MenuItemGroup>\r\n            </SubMenu>\r\n          </Menu>\r\n        </div>\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\utils\\FileUpload.js",["175","176"],"import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Icon } from 'antd';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload({ refreshFunction }) {\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState('');\r\n\r\n  const onDrop = (files) => {\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    };\r\n    formData.append('file', files[0]);\r\n\r\n    axios\r\n      .post('/api/courses/uploadImage', formData, config)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setImages([...images, response.data.image]);\r\n          refreshFunction([...images, response.data.image]);\r\n        } else {\r\n          alert('Failed to save image');\r\n        }\r\n      });\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = images.indexOf(image);\r\n\r\n    const newImages = [...images];\r\n    newImages.splice(currentIndex, 1);\r\n    setImagePath(image);\r\n\r\n    setImages(newImages);\r\n    refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: '300px',\r\n              height: '280px',\r\n              border: '1px solid lightgray',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '400px',\r\n          height: '280px',\r\n          border: '1px solid lightgray',\r\n          overflowX: 'hidden',\r\n          overflowY: 'hidden',\r\n        }}\r\n      >\r\n        {images.map((image, index) => (\r\n          <div onClick={() => onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: '400px', width: '400px', height: '280px' }}\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`courseImg-${index}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\CourseDetail\\CourseInfo\\CourseInfo.js",["177","178"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button, Card, Steps, Typography,\r\n} from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst CourseInfo = ({ course }) => {\r\n  const history = useHistory();\r\n  const [enrolled, setEnrolled] = useState(false);\r\n  const [status, setStatus] = useState([]);\r\n  const [courseLength, setCourseLength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      courseId: course._id,\r\n      userId: localStorage.userId,\r\n    };\r\n\r\n    axios.post('/api/paths/checkEnrollInfo', variables).then((response) => {\r\n      setEnrolled(response.data.enrolled);\r\n    });\r\n\r\n    let totalDuration = 0;\r\n    if (course) {\r\n      course.videos.forEach((video) => {\r\n        totalDuration += parseFloat(video.duration);\r\n      });\r\n    }\r\n    setCourseLength(totalDuration);\r\n  }, [enrolled]);\r\n\r\n  const handleEnroll = () => {\r\n    setStatus([]);\r\n    course.videos.forEach((video) => {\r\n      const index = status.find((item) => item.id === video._id);\r\n      if (index === undefined) {\r\n        status.push({ videoId: video._id, videoStatus: 'Not done' });\r\n      }\r\n    });\r\n\r\n    const variables = {\r\n      courseId: course._id,\r\n      userId: localStorage.userId,\r\n      status,\r\n    };\r\n\r\n    // update user information to learning path\r\n    axios.post('/api/paths/enrollCourse', variables).then((response) => {\r\n      if (response.data.success) {\r\n        alert('Enroll course successfully');\r\n        history.push(\r\n          `/video/${course.videos[0]._id}/${course.videos[0].course}`,\r\n        );\r\n      } else {\r\n        alert('Fail to enroll course');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    history.push(`/video/${course.videos[0]._id}/${course.videos[0].course}`);\r\n  };\r\n\r\n  const handleDuration = (duration) => {\r\n    let hours; let minutes; let seconds;\r\n\r\n    minutes = Math.floor(duration / 60);\r\n    // eslint-disable-next-line prefer-const\r\n    seconds = Math.floor(duration - minutes * 60);\r\n    if (minutes > 60) {\r\n      hours = Math.floor(minutes / 60);\r\n      minutes -= 60 * hours;\r\n    }\r\n\r\n    let res;\r\n    if (hours) {\r\n      res = `${hours}h:${minutes}m:${seconds}s`;\r\n    } else {\r\n      res = `${minutes}m:${seconds}s`;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        size=\"small\"\r\n        title={<Title level={3}>Course detail information:</Title>}\r\n        style={{ width: '80%', fontSize: 15, border: 'none' }}\r\n      >\r\n        <p>\r\n          Category:\r\n          {' '}\r\n          {course.category}\r\n        </p>\r\n        <p>\r\n          Description:\r\n          {' '}\r\n          {course.description}\r\n        </p>\r\n        <p>\r\n          Course length:\r\n          {' '}\r\n          {' '}\r\n          {handleDuration(courseLength)}\r\n        </p>\r\n        <p>This course includes: </p>\r\n        <Steps direction=\"vertical\" size=\"small\" current={1}>\r\n          {course\r\n              && course.videos\r\n              && course.videos.map((video) => (\r\n                <Step\r\n                  key={video._id}\r\n                  title={video.title}\r\n                  description={handleDuration(video.duration)}\r\n                  status=\"process\"\r\n                />\r\n              ))}\r\n        </Steps>\r\n        {enrolled ? (\r\n          <Button onClick={handleRedirect}>Go to course</Button>\r\n        ) : (\r\n          <Button onClick={handleEnroll}>Enroll Course</Button>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseInfo;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\VideoPlayer\\SideVideo\\SideVideo.js",["179","180","181","182"],"D:\\Workspace\\lms\\frontend\\src\\_actions\\types.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\Config.js",[],"D:\\Workspace\\lms\\frontend\\src\\components\\views\\CourseCollection\\CourseCollection.js",["183","184"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button, Card, Col, Row, Steps, Typography,\r\n} from 'antd';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport './CourseCollection.css';\r\n\r\nconst { Meta } = Card;\r\nconst { Title } = Typography;\r\nconst { Step } = Steps;\r\n\r\nconst CourseCollection = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  const [postSize, setPostSize] = useState(0);\r\n  const [searchTerms, setSearchTerms] = useState('');\r\n  const [courseStatus, setCourseStatus] = useState();\r\n\r\n  const getCourses = (variables) => {\r\n    axios.post('/api/courses/getCourses', variables).then((response) => {\r\n      if (response.data.success) {\r\n        if (variables.loadMore) {\r\n          setCourses([...courses, ...response.data.courses]);\r\n        } else {\r\n          setCourses(response.data.courses);\r\n        }\r\n        setPostSize(response.data.postSize);\r\n      } else {\r\n        alert('Failed to fetch courses');\r\n      }\r\n    });\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    const skipTemp = skip + limit;\r\n    const variables = {\r\n      skip: skipTemp,\r\n      limit,\r\n      loadMore: true,\r\n      searchTerm: searchTerms,\r\n    };\r\n    getCourses(variables);\r\n    setSkip(skipTemp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      skip,\r\n      limit,\r\n    };\r\n    getCourses(variables);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      userId: localStorage.userId,\r\n    };\r\n\r\n    axios.post('/api/paths/getAllPaths', variables).then((response) => {\r\n      setCourseStatus(response.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleDuration = (duration) => {\r\n    let hours; let minutes;\r\n\r\n    minutes = Math.floor(duration / 60);\r\n    const seconds = Math.floor(duration - minutes * 60);\r\n    if (minutes > 60) {\r\n      hours = Math.floor(minutes / 60);\r\n      minutes -= 60 * hours;\r\n    }\r\n\r\n    let res;\r\n    if (hours) {\r\n      res = `${hours}h:${minutes}m:${seconds}s`;\r\n    } else {\r\n      res = `${minutes}m:${seconds}s`;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const handleCheckStatus = (course, video) => {\r\n    let videoStatus;\r\n    courseStatus.forEach((coursePath) => {\r\n      if (coursePath.course === course._id) {\r\n        coursePath.status.forEach((videoStt) => {\r\n          if (video._id === videoStt.videoId) {\r\n            videoStatus = videoStt.videoStatus;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return videoStatus;\r\n  };\r\n\r\n  const renderCards = courses.map((course) => (\r\n    <Col lg={15} md={8} xs={24} key={course._id} style={{ width: '60%' }}>\r\n      <Card\r\n        hoverable\r\n        style={{ display: 'flex', flexDirection: 'row' }}\r\n        cover={(\r\n          <a href={`/course/${course._id}`}>\r\n            <img\r\n              src={course.thumbnail[0]}\r\n              alt=\"course thumbnail\"\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n              }}\r\n            />\r\n          </a>\r\n        )}\r\n        bodyStyle={{ width: '100%' }}\r\n      >\r\n        <div style={{ marginLeft: '2rem' }}>\r\n          <Meta\r\n            style={{ marginBottom: '1rem' }}\r\n            title={<Title level={3}>{course.title}</Title>}\r\n            description={(\r\n              <>\r\n                <p style={{ fontSize: 14 }}>\r\n                  Category:\r\n                  {' '}\r\n                  {course.category}\r\n                </p>\r\n                <p style={{ fontSize: 14 }}>\r\n                  Description:\r\n                  {' '}\r\n                  {course.description}\r\n                </p>\r\n              </>\r\n            )}\r\n          />\r\n\r\n          <Steps direction=\"vertical\" size=\"small\" current={1}>\r\n            {course\r\n              && course.videos\r\n              && course.videos.map((video) => (\r\n                <Step\r\n                  key={video._id}\r\n                  title={handleCheckStatus(course, video) === 'Done' ? 'Finished' : 'In progress'}\r\n                  description={handleDuration(video.duration)}\r\n                  status={handleCheckStatus(course, video) === 'Done' ? 'finish' : 'process'}\r\n                />\r\n              ))}\r\n          </Steps>\r\n\r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  ));\r\n\r\n  const updateSearchTerms = (newSearchTerms) => {\r\n    const variables = {\r\n      skip: 0,\r\n      limit,\r\n      searchTerm: newSearchTerms,\r\n    };\r\n\r\n    setSkip(0);\r\n    setSearchTerms(newSearchTerms);\r\n\r\n    getCourses(variables);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '75%',\r\n        margin: '3rem auto',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          margin: '1rem auto',\r\n        }}\r\n      >\r\n        <SearchBar refreshFunction={updateSearchTerms} />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div>\r\n        {courses.length === 0 ? (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              height: '300px',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Row\r\n              gutter={[16, 16]}\r\n              style={{\r\n                display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center',\r\n              }}\r\n            >\r\n              {renderCards}\r\n            </Row>\r\n          </div>\r\n        )}\r\n        <br />\r\n        <br />\r\n        {postSize >= limit && (\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button onClick={onLoadMore}>Load more</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseCollection;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\LearningPath\\LearningPath.js",["185","186","187","188"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, Steps } from 'antd';\r\n\r\nconst { Title } = Typography;\r\nconst { Step } = Steps;\r\n\r\nfunction LearningPath() {\r\n  const [categories, setCategories] = useState();\r\n  const [skip, setSkip] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  const [courses, setCourses] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/courses/getCategories').then((response) => {\r\n      if (response.data.success) {\r\n        setCategories(response.data.categories);\r\n      } else {\r\n        console.log('Failed to get categories of courses.');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const variables = {\r\n      skip,\r\n      limit,\r\n    };\r\n\r\n    axios.post('/api/courses/getCourses', variables).then((response) => {\r\n      if (response.data.success) {\r\n        setCourses(response.data.courses);\r\n      } else {\r\n        console.log('Failed to fetch courses');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center',\r\n    }}\r\n    >\r\n      {categories && courses && categories.map((category) => (\r\n        <>\r\n          <Title level={3}>{category}</Title>\r\n          <Steps\r\n            direction=\"horizontal\"\r\n            size=\"small\"\r\n            current={1}\r\n            style={{\r\n              display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '2rem 0rem', width: '80%',\r\n            }}\r\n          >\r\n            {courses.map((course) => (\r\n              category === course.category ? (\r\n                <Step\r\n                  key={course._id}\r\n                  title=\"In progress\"\r\n                  description={course.title}\r\n                />\r\n              ) : <></>\r\n            ))}\r\n          </Steps>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LearningPath;\r\n","D:\\Workspace\\lms\\frontend\\src\\components\\views\\Quiz\\Quiz.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":39,"column":15,"nodeType":"201","messageId":"202","endLine":39,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":52,"column":15,"nodeType":"201","messageId":"202","endLine":52,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":64,"column":7,"nodeType":"201","messageId":"202","endLine":64,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":90,"column":7,"nodeType":"201","messageId":"202","endLine":90,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":117,"column":11,"nodeType":"201","messageId":"202","endLine":117,"endColumn":22},{"ruleId":"203","severity":1,"message":"204","line":17,"column":8,"nodeType":"205","messageId":"206","endLine":17,"endColumn":12},{"ruleId":"203","severity":1,"message":"207","line":13,"column":17,"nodeType":"205","messageId":"206","endLine":13,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":29,"column":9,"nodeType":"201","messageId":"202","endLine":29,"endColumn":20},{"ruleId":"203","severity":1,"message":"208","line":78,"column":11,"nodeType":"205","messageId":"206","endLine":78,"endColumn":16},{"ruleId":"203","severity":1,"message":"209","line":83,"column":11,"nodeType":"205","messageId":"206","endLine":83,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":67,"column":15,"nodeType":"212","messageId":"202","endLine":67,"endColumn":49},{"ruleId":"203","severity":1,"message":"208","line":80,"column":11,"nodeType":"205","messageId":"206","endLine":80,"endColumn":16},{"ruleId":"203","severity":1,"message":"209","line":85,"column":11,"nodeType":"205","messageId":"206","endLine":85,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":39,"column":14,"nodeType":"212","messageId":"202","endLine":39,"endColumn":54},{"ruleId":"210","severity":1,"message":"211","line":51,"column":9,"nodeType":"212","messageId":"202","endLine":51,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":54,"column":9,"nodeType":"212","messageId":"202","endLine":54,"endColumn":41},{"ruleId":"203","severity":1,"message":"213","line":25,"column":16,"nodeType":"205","messageId":"206","endLine":25,"endColumn":23},{"ruleId":"203","severity":1,"message":"207","line":26,"column":17,"nodeType":"205","messageId":"206","endLine":26,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":80,"column":9,"nodeType":"201","messageId":"202","endLine":80,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":33,"column":9,"nodeType":"212","messageId":"202","endLine":33,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":55,"column":9,"nodeType":"201","messageId":"202","endLine":55,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":80,"column":5,"nodeType":"201","messageId":"202","endLine":80,"endColumn":16},{"ruleId":"210","severity":1,"message":"211","line":39,"column":9,"nodeType":"212","messageId":"202","endLine":39,"endColumn":49},{"ruleId":"210","severity":1,"message":"211","line":42,"column":9,"nodeType":"212","messageId":"202","endLine":42,"endColumn":46},{"ruleId":"203","severity":1,"message":"213","line":19,"column":16,"nodeType":"205","messageId":"206","endLine":19,"endColumn":23},{"ruleId":"203","severity":1,"message":"207","line":20,"column":17,"nodeType":"205","messageId":"206","endLine":20,"endColumn":25},{"ruleId":"203","severity":1,"message":"214","line":31,"column":16,"nodeType":"205","messageId":"206","endLine":31,"endColumn":23},{"ruleId":"210","severity":1,"message":"211","line":84,"column":9,"nodeType":"212","messageId":"202","endLine":84,"endColumn":100},{"ruleId":"199","severity":1,"message":"200","line":88,"column":13,"nodeType":"201","messageId":"202","endLine":88,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":90,"column":13,"nodeType":"201","messageId":"202","endLine":90,"endColumn":24},{"ruleId":"210","severity":1,"message":"211","line":139,"column":11,"nodeType":"212","messageId":"202","endLine":139,"endColumn":47},{"ruleId":"199","severity":1,"message":"200","line":142,"column":11,"nodeType":"201","messageId":"202","endLine":142,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":146,"column":7,"nodeType":"212","messageId":"202","endLine":146,"endColumn":60},{"ruleId":"199","severity":1,"message":"200","line":161,"column":9,"nodeType":"201","messageId":"202","endLine":161,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":177,"column":11,"nodeType":"201","messageId":"202","endLine":177,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":8,"column":16,"nodeType":"217","messageId":"218","endLine":8,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":27,"column":9,"nodeType":"212","messageId":"202","endLine":27,"endColumn":32},{"ruleId":"203","severity":1,"message":"219","line":8,"column":10,"nodeType":"205","messageId":"206","endLine":8,"endColumn":19},{"ruleId":"210","severity":1,"message":"211","line":24,"column":11,"nodeType":"212","messageId":"202","endLine":24,"endColumn":40},{"ruleId":"210","severity":1,"message":"211","line":54,"column":9,"nodeType":"212","messageId":"202","endLine":54,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":59,"column":9,"nodeType":"212","messageId":"202","endLine":59,"endColumn":39},{"ruleId":"203","severity":1,"message":"220","line":7,"column":10,"nodeType":"205","messageId":"206","endLine":7,"endColumn":22},{"ruleId":"203","severity":1,"message":"221","line":8,"column":10,"nodeType":"205","messageId":"206","endLine":8,"endColumn":21},{"ruleId":"210","severity":1,"message":"211","line":15,"column":9,"nodeType":"212","messageId":"202","endLine":15,"endColumn":38},{"ruleId":"199","severity":1,"message":"200","line":73,"column":9,"nodeType":"201","messageId":"202","endLine":73,"endColumn":20},{"ruleId":"203","severity":1,"message":"207","line":16,"column":17,"nodeType":"205","messageId":"206","endLine":16,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":31,"column":9,"nodeType":"212","messageId":"202","endLine":31,"endColumn":41},{"ruleId":"203","severity":1,"message":"213","line":10,"column":16,"nodeType":"205","messageId":"206","endLine":10,"endColumn":23},{"ruleId":"203","severity":1,"message":"207","line":11,"column":17,"nodeType":"205","messageId":"206","endLine":11,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":19,"column":9,"nodeType":"201","messageId":"202","endLine":19,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":34,"column":9,"nodeType":"201","messageId":"202","endLine":34,"endColumn":20},"lines-around-directive",["222"],"no-spaced-func",["223"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'Quiz' is defined but never used.","Identifier","unusedVar","'setLimit' is assigned a value but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","'setSkip' is assigned a value but never used.","'setData' is assigned a value but never used.","func-names","Unexpected unnamed function.","FunctionDeclaration","unnamed","'imagePath' is assigned a value but never used.","'courseStatus' is assigned a value but never used.","'searchTerms' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]